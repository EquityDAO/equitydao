/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { GovernorBravoDelegateStorageV1 } from "../GovernorBravoDelegateStorageV1";

export class GovernorBravoDelegateStorageV1__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernorBravoDelegateStorageV1> {
    return super.deploy(
      overrides || {}
    ) as Promise<GovernorBravoDelegateStorageV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GovernorBravoDelegateStorageV1 {
    return super.attach(address) as GovernorBravoDelegateStorageV1;
  }
  connect(signer: Signer): GovernorBravoDelegateStorageV1__factory {
    return super.connect(signer) as GovernorBravoDelegateStorageV1__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorBravoDelegateStorageV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GovernorBravoDelegateStorageV1;
  }
}

const _abi = [
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comp",
    outputs: [
      {
        internalType: "contract CompInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialProposalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "latestProposalIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "canceled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "contract TimelockInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061036b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80635c60da1b11610081578063da35c6641161005b578063da35c664146102ad578063f851a440146102b6578063fc4eee42146102d657600080fd5b80635c60da1b14610264578063b58131b014610284578063d33219b41461028d57600080fd5b806317977c61116100b257806317977c611461021b578063267822471461023b5780633932abb11461025b57600080fd5b8063013cf08b146100d957806302a251a3146101bf578063109d0af8146101d6575b600080fd5b6101576100e736600461031c565b600a60208190526000918252604090912080546001820154600283015460078401546008850154600986015496860154600b870154600c90970154959773ffffffffffffffffffffffffffffffffffffffff90951696939592949193919290919060ff808216916101009004168a565b604080519a8b5273ffffffffffffffffffffffffffffffffffffffff90991660208b0152978901969096526060880194909452608087019290925260a086015260c085015260e084015215156101008301521515610120820152610140015b60405180910390f35b6101c860045481565b6040519081526020016101b6565b6009546101f69073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b6565b6101c86102293660046102df565b600b6020526000908152604090205481565b6001546101f69073ffffffffffffffffffffffffffffffffffffffff1681565b6101c860035481565b6002546101f69073ffffffffffffffffffffffffffffffffffffffff1681565b6101c860055481565b6008546101f69073ffffffffffffffffffffffffffffffffffffffff1681565b6101c860075481565b6000546101f69073ffffffffffffffffffffffffffffffffffffffff1681565b6101c860065481565b6000602082840312156102f157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461031557600080fd5b9392505050565b60006020828403121561032e57600080fd5b503591905056fea2646970667358221220c2ee573af300a1cb8380309a9b1f8cd245969bb0b368c4be8f3aa7fdc134fb4e64736f6c63430008060033";
